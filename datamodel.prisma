enum Previledge {
  SUPERADMIN
  ADMIN
  MODERATOR
  AUTHOR
  READER
}

enum CategoryEnum {
  TECH
  FIN
  DIGIMARK
  CODING
  TUTORIAL
  HOWTO
  WRITING
  INSPIRE
  SCIENCE
  POLITICS
  LIFESTYLE
  FOOD
  BUSSINESS
  ENTREPRENEUR
  HISTORY
  HEALTH
  PET
  PARENTHOOD
  TRAVEL
  INDIA
  CHINA
  US
  UK
  WORLD
  NEWS
  REVIEW
}

type Category {
  id: ID! @unique
  text: String!
  category: CategoryEnum! @unique
  posts: [Post]! @relation(name: "PostsCategories")
}

enum PostStatus {
  PUBLISHED
  DRAFT
  DELETED
}

type Post {
  id: ID! @unique
  title: String!
  editorSerializedOutput: Json!
  editorCurrentContent: Json!
  editorHtml: String!
  updatedAt: DateTime!
  createdAt: DateTime!
  publishedAt: DateTime
  upvotes: [Upvote]! @relation(name: "UpvotesAndPost")
  upvotesNumber: Int @default(value: "0")
  author: User @relation(name: "PostsAndUser")
  authorId: String!
  categories: [Category!]! @relation(name: "PostsCategories")
  thumbnail: Json!
  status: PostStatus!
  slug: String!
}

type User {
  id: ID! @unique
  socialId: String! @unique
  fname: String!
  lname: String!
  username: String! @unique
  name: String!
  phone: String @unique
  email: String! @unique
  gender: String
  birthday: String
  upvotes: [Upvote]! @relation(name: "UpvotesAndUser")
  bio: String
  posts: [Post] @relation(name: "PostsAndUser")
  profilePicture: String!
  followers: [User]!
  previledge: [Previledge]!
  signUpMethod: String!
  accessToken: String!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type Upvote {
  id: ID! @unique
  user: User! @relation(name: "UpvotesAndUser")
  post: Post! @relation(name: "UpvotesAndPost")
  updatedAt: DateTime!
  createdAt: DateTime!
}